<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>leader = 0;
character[0] = Lento;
character[1] = Rallentando;
character[2] = Adagio;
character[3] = Allegro;
//character[4] = Hauptstimme;
/*character[5] = Brio;
character[6] = Zahlzeit;*/
character[7] = Heron;
/*
character[8] = Falin;
character[9] = Len;
character[10] = Maria;
character[11] = Gilen;
character[12] = Abner;
character[13] = Livius;
character[14] = pastAllegro;
character[15] = pastAdagio;
character[16] = Robert;*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if (object_exists(Rallentando) &amp;&amp; object_exists(Adagio))
{
    if leader = 0
    {
        with(character[leader]) 
        {
            leader_step();
            sprite_change_leader();
        }
        with(character[leader+1]) sheep_step();
        with(character[leader+2]) sheep2_step();
    }
    else if leader = 1
    {
        with(character[leader])
        { 
            leader_step();
            sprite_change_leader();
        }
        with(character[leader-1]) sheep_step();
        with(character[leader+1]) sheep2_step();
    }
    else if leader = 2
    {
        with(character[leader])
        { 
            leader_step();
            sprite_change_leader();
        }
        with(character[leader-1]) sheep_step();
        with(character[leader-2]) sheep2_step();
    }
}

else
{*/
if !instance_exists(heronAttackObj)
{
        with(character[leader])
        { 
            leader_step();
            sprite_change_leader();
        }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
