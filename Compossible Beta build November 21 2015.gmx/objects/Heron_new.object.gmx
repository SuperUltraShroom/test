<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>HeronIdleD</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>generic_mainChar</parentName>
  <maskName>Shadow</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Important things for the game to even so much as run.
if !object_exists(start_manager)
{
    instance_create(x, y, start_manager);
}
if !object_exists(partyManager)
{
    instance_create(x,y,partyManager);
}
if !object_exists(Inventory)
{
    instance_create(x,y,Inventory);
}
event_inherited()
// Important things for the character. 
MaxHealth = 150; // This character's current max health.
MaxStam = 100; // The character's current max stamina.
MaxInv = 20; // How much the character can carry in their bag.
isLeader = 1; // Is this character the party leader?
Damage = 0; // Has this character taken any damage?
fatigue = 0; // Has the character gained any fatigue?
moving = false; // Is the character moving? Defaults to false.
walkSpeed = 3; // How fast can the character walk?
runSpeed = 5; // How fast can the character run?
name = "Heron"; // Defines the character's name for sprite reasons.
psionics = false // Are you cycling through the psionics menu?
weapons = false; // Is the character holding their weapon?
talking = false; // Is the character talking to someone currently?
attacking = false; // Is the character attacking?
playingAttack = false; // Is the attack animation playing?
justDied = false; // Did Heron just now die? Important for animation.
dead = false; // Is Heron dead? 
str = 2; // The character's base strength.
luck = 1; // The character's luck. Determines a few things in gameplay, most notably crits.
prevRoom = 0; // The previous room. This is useful for various things.
defense = 2; // Heron's base defense.
attractBot = false; // Triggered an alarm?
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>305</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_timeline_set</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>14</kind>
            <timeline>-100</timeline>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Just void.
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if object_exists(partyManager)
{
//Important constant variables that we need to keep track of every step.
CurrentHealth = MaxHealth - Damage;
CurrentStam = MaxStam - fatigue;
// Manage depth dynamically 
depth = -y

if (isLeader = 1)
{
    partyManager.leader = 7;
    view_object[0] = Heron;
}
else
{
}

if room = StartMenu
{
    visible = false;
}
else
{visible = true;}

// Calcuate Heron's attack based on strength every step for a little randomness.
// Also set up critical hits.
if random(100) &lt;= luck
{
    attack = (str + round(random(3))) * 3;
}
else
{
    attack = str + round(random(3));
}
}    

// Deal with Health:
if CurrentHealth &lt; 0
{
    CurrentHealth = 0;
}

if CurrentHealth == 0
{
    dead = true;
    justDied = true;
}
// Deal with Stamina
if CurrentStam &lt; 0
{
    CurrentStam = 0;
}
if justDied
{
    if !instance_exists(heronDieObj)
    {
        instance_create(x,y,heronDieObj);
    }
}

// Deal with scripted losses.
if room = S5_F57_Boss
{
    if CurrentHealth &lt; 1
    {
        
    }
}

if place_meeting(x,y,SecBot)
{
    Heron.walkSpeed = 1.5;
    Heron.runSpeed = 2.5;
    attractBot = true;
}
else
{
    Heron.walkSpeed = 3;
    Heron.runSpeed = 5;
    attractBot = false;
}

if collision_circle(x,y,10,MatBot,false,true)
{
    mask_index = Shadow;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>weapons</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>true</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!dead &amp;&amp; playingAttack = false)
{
    attacking = true;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>421</id>
        <kind>3</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !instance_exists(cutsceneController)
{
    if !dead
    {
        if room != StartMenu
        {
            if (!collision_circle(x,y,20,generic_NPC,false,true) &amp;&amp; !weapons &amp;&amp; !talking)
            {
                weapons = true;
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !instance_exists(cutsceneController)
{
    if !dead
    {
        if room != StartMenu
        {
            if !psionics
            {
                psionics = true;
                instance_create(Heron.x -20,Heron.y - 10, psiMenu);
            }
            else
            {
                with(psiMenu)
                {
                    instance_destroy();
                }
                psionics = false;
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>10,48</point>
    <point>26,26</point>
  </PhysicsShapePoints>
</object>
