<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>ZahlzeitIdleD</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>genericMob</parentName>
  <maskName>Shadow</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Zahlzeit's Boss Stats
MaxHealth = 200;
defense = 3;
damage = 0;
name = 'Zahlzeit';
dir = "D";
canFire = true; // Can we shoot a bullet?
canPunch = true; // Can we punch?
alarm[1]=30;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canPunch = true;
alarm[1]=30;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canPunch = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = 0 - y;

CurrentHealth = MaxHealth - damage;

sprite_index = asset_get_index(name+"Idle"+dir);
// Call Zahlzeit's face Heron script.
scr_zahlzeit_faceHeron(x,y);

// Random generator
rand = irandom_range(0, 8);

/// Make Zahlzeit do shit.


//Zahlzeit's boss battle pattern.
//Let's start it out with several collision circles to determine some variables.

// These are pretty self explanitory. 
atLongRange = false;
atCloseRange = false;
inRange = false;
outOfRange = true;

// First, the furthest range one. 
if collision_circle(x,y,150,Heron,false,true)
{
    outOfRange = false;
    atLongRange = true;
    inRange = true;
    atCloseRange = false;
    if collision_circle(x,y,50,Heron,false,true)
    {
        outOfRange = false;
        inRange = true;
        atCloseRange = true;
        atLongRange = false;
    }
}
else
{
    outOfRange = true;
    inRange = false;
    atCloseRange = false;
    atLongRange = false;
}

// Now that range is determined, let's figure out what we need to do.

// First, if the target is out of range, move towards it.

if (outOfRange)
{
    // Well, we're out of range, so we need to run towards Heron. Zahlzeit ain't no slouch!
    move_towards_point(Heron.x,Heron.y,6)
}
// So what do we do if Heron's in range?
else if (inRange)
{
    // Here's where we get slightly complicated.
    // First, stop pursuing Heron.
    speed = 0;
    // First, let's consider what to do when we're at long range.
    if (atLongRange)
    {
        //Force an approach if the player is trying to run away.
        // Shoot at/around Heron until he enters close range.
        if canFire
        {
            if (rand &gt; 5)
            {
                instance_create(x,y,BouncyBullet);
                canFire = false;
            }
            else
            {
                instance_create(x,y,Zahlzeit_Bullet);
                canFire = false;
            }
        }
        else
        {}
    }
    else if (atCloseRange)
    {
        // Heron is within punching distance now. A solid hit with the metal arm will knock Heron back into long range.
        // We'll disable atLongRange to ensure no shooting at him.
        atLongRange = false;
        // So, aim a punch at Heron. We'll just randomly decide which to use - the combo-able standard punch/kick, or the heavy arm.
        if (canPunch)
        {
            if (ZahlzeitBoss.dir = "D")
            {
                instance_create(ZahlzeitBoss.x,ZahlzeitBoss.y+10,ZahlzeitPunch);
                canPunch = false;
            }
            else if (ZahlzeitBoss.dir = "U")
            {
                instance_create(ZahlzeitBoss.x,ZahlzeitBoss.y-10,ZahlzeitPunch);
                canPunch = false;
            }
            else if (ZahlzeitBoss.dir = "L")
            {
                instance_create(ZahlzeitBoss.x-10,ZahlzeitBoss.y,ZahlzeitPunch);
                canPunch = false;
            }
            else if (ZahlzeitBoss.dir = "R")
            {
                instance_create(ZahlzeitBoss.x+10,ZahlzeitBoss.y,ZahlzeitPunch);
                canPunch = false;
            }
            else if (ZahlzeitBoss.dir = "DDR")
            {
                instance_create(ZahlzeitBoss.x+10,ZahlzeitBoss.y+10,ZahlzeitPunch);
                canPunch = false;
            }
            else if (ZahlzeitBoss.dir = "DDL")
            {
                instance_create(ZahlzeitBoss.x-10,ZahlzeitBoss.y+10,ZahlzeitPunch);
                canPunch = false;
            }
            else if (ZahlzeitBoss.dir = "UDR")
            {
                instance_create(ZahlzeitBoss.x+10,ZahlzeitBoss.y-10,ZahlzeitPunch);
                canPunch = false;
            }
            else if (ZahlzeitBoss.dir = "UDL")
            {
                instance_create(ZahlzeitBoss.x-10,ZahlzeitBoss.y-10,ZahlzeitPunch);
                canPunch = false;
            }
            else
            {
            }
        }
        else{}
    }
    else
    {
        // Heron must be out of range if he isn't in range, right?
        outOfRange = true;
        inRange = false;
        atCloseRange = false;
        atLongRange = false;
    }
}
else // So Heron isn't in range and he isn't out of range? The hell is that? Let's treat it as if he's out of range.
{
    outOfRange = true;
    inRange = false;
    atCloseRange = false;
    atLongRange = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="attackObject">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>damage += do_damage(defense);
instance_create(x,y,draw_dmg);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>9,18</point>
    <point>9,9</point>
  </PhysicsShapePoints>
</object>
