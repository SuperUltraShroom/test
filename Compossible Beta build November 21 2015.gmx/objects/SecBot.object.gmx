<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>SecurityBotIdleDDL</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>genericMob</parentName>
  <maskName>Shadow</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>MaxHealth = 10;
defense = 2;
damage = 0;
name = "SecBot";
dir = "DDL"
invulnerable = false;
hitstun = false;
knockbackAmt = 25;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hitstun = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>invulnerable = false;
image_alpha = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>invulnerable = true;
image_alpha = .5;
alarm[1]= 30;
hitstun = true;
alarm[2] = 15
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>char = partyManager.leader;
depth = 0 - y;

CurrentHealth = MaxHealth - damage;
sprite_index = asset_get_index("SecurityBotIdle"+dir);
if (CurrentHealth &lt;= 0)
{
    instance_destroy();
}

// What to do if the party leader gets too close.
if !partyManager.character[char].dead
{
    if !hitstun
    {
        if collision_circle(x,y,80,partyManager.character[char],false,true)
        {
            detect_player(x,y);
            move_towards_point(partyManager.character[char].x,partyManager.character[char].y, 3);
            
            if collision_circle(x,y,30,partyManager.character[char],false,true)
            {
                solid = false;
            }
        }
        else
        {
            speed = 0;
            solid = true;
        }
    }
    else
    { speed = 0;} 
}
//if (instance_exists (asset_get_index ((string (partyManager.character[char]))+"AttackObj"+(string (partyManager.character[char].attackfacing)))))
//{
if (place_meeting(x, y, asset_get_index ((string (partyManager.character[char]))+"AttackObj"+(string (partyManager.character[char].attackfacing)))))
{
    global.invulnEnemy = instance_id;
    if invulnerable = false
    {
        enemyKnockback(instance_id, knockbackAmt);
        damage += do_damage(defense);
        invulnerable = true;
        instance_create(x,y,draw_dmg);
        alarm[0] = 1;
    }
}
//}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="HeronAttackObjParent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="Heron">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if instance_exists(heronAttackObj)
{
    global.invulnEnemy = instance_id;
    if invulnerable = false
    {
        enemyKnockback(instance_id, knockbackAmt);
        damage += do_damage(defense);
        invulnerable = true;
        instance_create(x,y,draw_dmg);
        alarm[0] = 1;
    }
    else{}
}
else{}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>9,18</point>
    <point>9,9</point>
  </PhysicsShapePoints>
</object>
